---
import Link from './Link.astro';
import List from './List.astro';
import { getClassAttribute } from '../lib/utils.ts'
const { as: Text = 'p', block } = Astro.props;

let blockObjs = block[block.type].rich_text
blockObjs = getClassAttribute(block)

console.log(blockObjs)

---

// not sure if returning only half of the tag is okay
<List {block} is_first={true} />

// <Text> is a polymorphic component; it can be h1, h2, h3, p, blockquote, li, etc.
// The default is set to <p>
<Text>
  {
    blockObjs.map((blockObj) => (
        <Link href={blockObj.href}>
          {
            blockObj.classList?.length > 0 ? 
            <span class={blockObj.classList.join(' ')}>{blockObj.plain_text}</span> :
            blockObj.plain_text // currently, <slot> gets rendered with trailing whitespaces when not wrapping it a tag
          }
        </Link>
      ))
  }
  <slot />
</Text>
<List {block} is_last={true} />


<style>
  .notion-bold {
    font-weight: bold;
  }

  .notion-italics {
    font-style: italic;
  }

  .notion-underline {
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  .notion-strikethrough {
    text-decoration: line-through;
  }
</style>
