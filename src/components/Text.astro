---
import List from './List.astro';
import { Code } from 'astro/components';
import { getClassAttribute } from '../lib/utils.ts'
const { as: Text = 'p', block } = Astro.props;

let objType: string;
Text === 'figcaption' ? objType = 'caption' : objType = 'rich_text'
let blockObjs = block[block.type][objType]

blockObjs = getClassAttribute(block, objType)

const getStyles = (blockObj) => {
  let styles = '';
  if (blockObj?.classList?.length > 0) {
    styles = blockObj?.classList.join(' ')
  }
  return styles && `class='${styles}'`
}

const getLink = (blockObj) => {
  return (
    `<a href=${blockObj.href} ${getStyles(blockObj)} >${blockObj.plain_text}</a>`
  )
}

const getText = (blockObj) => {
  const tag = blockObj.annotations.code ? 'code' : 'span'
  let text = `<${tag} ${getStyles(blockObj)}>${blockObj.plain_text}</${tag}>`;

  // TODO: move this block to List component
  if (block.type === 'to_do') {
    text = `
      <input type="checkbox" id="todo" name="todo" ${block[block.type].checked ? 'checked' : ''} />
      <label ${getStyles(blockObj)} for="todo">${blockObj.plain_text}</label>
    `
  }
  return text
}
---

<List {block} is_first={true} />
    <Text class:list={'notion-' + block.type}>
      {
        blockObjs.map((blockObj) => {
          return (
            block.type === 'code' && block[block.type].language !== 'plain text' ?
              <Code code={blockObj.plain_text} lang={block[block.type].language} theme="dark-plus"/> :
              <Fragment set:html={`${blockObj.href ? getLink(blockObj) : getText(blockObj)}`}></Fragment>
          )
        })
      }
      <slot />
    </Text>
<List {block} is_last={true} />


<style is:global>
  .notion-bold {
    font-weight: bold;
  }

  .notion-italic {
    font-style: italic;
  }

  .notion-underline {
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  .notion-strikethrough {
    text-decoration: line-through;
  }
</style>

