---
import XElement from 'astro-xelement';
let { block, type } = Astro.props;

function getCorrectTypeName(type: string): string {
  const correctTypeName = {
    paragraph: () => {
      const iscode = renderBlock('paragraph').annotations.code;
      if (iscode) {
        return 'code';
      }
      return 'p';
    },
    heading_1: () => {
      return 'h1';
    },
    heading_2: () => {
      return 'h2';
    },
    heading_3: () => {
      return 'h3';
    },
    bulleted_list_item: () => {
      return 'ul';
    },
    numbered_list_item: () => {
      return 'ol';
    },
    li: () => {
      return 'li';
    },
  };
  return correctTypeName[type]();
}

const renderBlock = (type: string) => {
  function renderText() {
    const value = block[type];
    const [rich_text] = value.rich_text;
    const annotations = rich_text.annotations;
    const content = rich_text.text.content;
    return { rich_text, annotations, content };
  }

  let renderMethod = {
    paragraph: function () {
      return renderText();
    },
    heading_1: function () {
      return renderText();
    },
    heading_2: function () {
      return renderText();
    },
    heading_3: function () {
      return renderText();
    },
    bulleted_list_item: function () {
      return renderText();
    },
    numbered_list_item: function () {
      return renderText();
    },
  };

  return renderMethod[type]();
};

const getCorrectClassName = (type: string): string => {
  const rich_text = renderBlock(type);
  let classname = '';
  if (rich_text.annotations) {
    const attr = rich_text.annotations;
    classname += [
      attr.bold ? 'notion-bold' : '',
      attr.italic ? 'notion-italic' : '',
      attr.strikethrough ? 'notion-strikethrough' : '',
      attr.underline ? 'notion-underline' : '',
    ]
      .filter((attr) => attr.length > 0)
      .join(' ');
  }
  return classname;
};
---

<XElement @is={getCorrectTypeName(type)}>
  {renderBlock(type).content}
</XElement>

<style>
  .notion-bold {
    font-weight: bold;
  }

  .notion-underline {
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  .notion-strikethrough {
    text-decoration: line-through;
  }
</style>
