---
import List from './List.astro';
import InlineCode from './InlineCode.astro';
import '../styles/global.css'
import { getClassAttributes, setClassAttributes } from '../api/utils.ts'
const { as: Text = 'p', block } = Astro.props;

let objType: string;
Text === 'figcaption' ? objType = 'caption' : objType = 'rich_text'
let blockObjs = block[block.type][objType]

blockObjs = setClassAttributes(block, objType)

const getLink = (blockObj) => {
  return (
    `<a href=${blockObj.href} ${getClassAttributes(blockObj, 'link')} >${blockObj.plain_text}</a>`
  )
}

const getText = (blockObj) => {
  let text = blockObj.plain_text

  const classAttributes = getClassAttributes(blockObj)

  if (classAttributes) {
    text = `<span ${classAttributes}>${blockObj.plain_text}</span>`;
  }

  if (block.type === 'to_do') {
    text = `
      <input type="checkbox" id="todo" name="todo" ${block[block.type].checked ? 'checked' : ''} />
      <label ${classAttributes} for="todo">${blockObj.plain_text}</label>
    `
  }

  return text
}

---

<List {block} is_first={true} />
<Text class:list={'notion-' + Text}>
  {
    blockObjs.map((blockObj) => {
      return (
        blockObj?.annotations.code
        ? <InlineCode text={blockObj.plain_text} />
        : <Fragment set:html={`${blockObj.href ? getLink(blockObj) : getText(blockObj)}`}></Fragment>
      )
    })
  }
  <slot />
</Text>
<List {block} is_last={true} />

