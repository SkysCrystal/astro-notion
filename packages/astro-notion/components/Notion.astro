---
import Text from './Text.astro';
import NonText from './NonText.astro'
import Toggle from './Toggle.astro'
import Callout from './Callout.astro'
import { getCorrectTagName } from '../api/utils.ts'

const textTypes = new Set(['h1', 'h2', 'h3', 'p', 'li', 'blockquote', 'pre', 'div', 'summary']);

const { blocks } = Astro.props

---

{
  blocks.map(block => {
    let tagName = getCorrectTagName(block, block.type);
    if (!tagName) {
      return;
    }
    return (
      // if block has children, recursively call this component again as a slot of <Text> component
      block?.has_children
      ?
        block.type === 'callout'
        ?
          <Callout {block}>
            <Text as={tagName} {block}>
              <Astro.self blocks={block[block.type].children} />
            </Text>
          </Callout> 
        :
        <Toggle>
          <Text slot='summary' as={tagName} {block} />
          <Astro.self slot='content' blocks={block[block.type].children} />
        </Toggle> 
      :
        !textTypes.has(tagName) 
        ?
          <NonText as={tagName} {block} /> 
          :
          <Callout {block}>
            <Text as={tagName} {block} />
          </Callout> 
    )
  })
}
